from news.models import Author, Category, Post, PostCategory, Comment

1 task
user_1 = User.objects.create_user(username='user_1')
user_2 = User.objects.create_user(username='user_2')

2 task
author_1 = Author.objects.create(user=user_1)
author_2 = Author.objects.create(user=user_2)

3 task
crime = Category.objects.create(name = 'Crime')
history = Category.objects.create(name = 'History')
animals = Category.objects.create(name = 'Animals')
it = Category.objects.create(name = 'IT')

4 task
news_1 = Post.objects.create(author = author_1, tipe = 'NE', title = 'В Челябинске водитель скорой избил медбрата за просьбу не курить в машине', text = 'В Челябинске 39-летний сотрудник скорой помощи Кирилл Веденский заявил о том, что его избил водитель С МП за просьбы прекратить курение в салоне. У пострадавшего диагностировали ушиб мягких тканей головы, более точный диагноз ему поставят в начале рабочей недели. В полиции Челябинска проводят проверку по этому случаю. По словам Веденского, все произошло днем 25 апреля около экстренного приемного покоя ОКБ № 3. Взрыв гнева у водителя вызвали упоминание закона о защите от табакокурения и приказа главврача о штрафах за курение для сотрудников СМП, вспомнил Кирилл Веденский.')
article_1 = Post.objects.create(author = author_1, tipe = 'AR', title = '5 интересных фактов о кошка', text = '1. Кошки могут прыгать на высоту, превышающую их собственную длину в шесть раз, благодаря мощным задним лапам, которые позволяют им совершать невероятные прыжки. 2. У кошек есть 32 мышцы, управляющие каждым ухом, что позволяет им поворачивать их на 180 градусов для лучшего улавливания звуков. 3. Около 70% своей жизни кошки проводят во сне, что эквивалентно примерно 13–16 часам в сутки. 4. Нос у кошек имеет уникальный рисунок, подобный отпечаткам пальцев у людей, и не существует двух кошек с одинаковыми носами. 5. Их слух намного острее, чем у человека: кошки могут улавливать звуки частотой до 65 000 Гц, что позволяет им слышать ультразвук.')
article_2 = Post.objects.create(author = author_2, tipe = 'AR', title = 'История Python', text = 'История Python началась в конце 1980-х годов в Центре математики и информатики (CWI) в Нидерландах. Голландский программист Гвидо ван Россум работал над языком ABC — проектом, созданным для обучения программированию. В 1994 году была выпущена версия Python 1.0, которая включала в себя такие нововведения, как система модулей, поддержка классов и базовые операции с файлами. В 2000 году была выпущена версия Python 2.0, которая стала важным этапом в развитии языка. В этой версии были добавлены такие функции, как сборка мусора и поддержка Unicode. В 2008 году была выпущена версия Python 3.0, которая внесла значительные изменения в синтаксис, включая отмену некоторых устаревших функций для улучшения читаемости. 3 Этот релиз заложил основу для современного Python, который стал стандартом к концу 2010-х годов.')

5 task
PostCategory.objects.create(post = news_1, category = crime)
PostCategory.objects.create(post = article_1, category = animals)
PostCategory.objects.create(post = article_2, category = it)
PostCategory.objects.create(post = article_2, category = history)

6 task
comment_1 = Comment.objects.create(post = news_1, user = user_1, text = 'Ого!')
comment_2 = Comment.objects.create(post = article_1, user = user_2, text = 'Ой как интересно!')
comment_3 = Comment.objects.create(post = article_2, user = user_2, text = 'Нудятина...')      
comment_4 = Comment.objects.create(post = article_2, user = user_1, text = 'а я это знал')

7 task
comment_1.like()
comment_1.dislike()
comment_1.like()
comment_1.like()
comment_2.like()
comment_2.like()
comment_3.like()
comment_4.like()
news_1.like()
news_1.dislike()
news_1.like()
news_1.like()
article_1.like()
article_2.like()

8 task
author_1.update_rating()
author_2.update_rating()

9 task
Author.objects.order_by('-rating').first().user.username 
Author.objects.order_by('-rating').first().rating

10 task
Post.objects.order_by('-rating').first().create_time
Post.objects.order_by('-rating').first().author.user.username
Post.objects.order_by('-rating').first().rating
Post.objects.order_by('-rating').first().title 
Post.objects.order_by('-rating').first().preview()

11 task
Comment.objects.filter(post = Post.objects.order_by('-rating').first()).values('create_time', 'user__username', 'rating', 'text')
